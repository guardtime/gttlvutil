#
# GUARDTIME CONFIDENTIAL
#
# Copyright (C) [2016] Guardtime, Inc
# All Rights Reserved
#
# NOTICE:  All information contained herein is, and remains, the
# property of Guardtime Inc and its suppliers, if any.
# The intellectual and technical concepts contained herein are
# proprietary to Guardtime Inc and its suppliers and may be
# covered by U.S. and Foreign Patents and patents in process,
# and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this
# material is strictly forbidden unless prior written permission
# is obtained from Guardtime Inc.
# "Guardtime" and "KSI" are trademarks or registered trademarks of
# Guardtime Inc.
#



###############################################################################
# Convert extend response file which includes HMAC calculation function
# (approach v1).

# Verify the result by tlvgreping HMAC from resulting stream.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_response-hmac_func_v1.txt | {GTTLVGREP} 300.1f
>>>
010458a036efa3a44ca482cab675738873efef6b13479e0b555ce025d3a9972257
>>>= 0

# Compare to the original binary file.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_response-hmac_func_v1.txt | diff test/resources/tlv/test2-extend_response-reqId_1.tlv -
>>>
>>>= 0

###############################################################################
# Convert extend response file which includes HMAC calculation function
# (approach v2).

# Verify the result by tlvgreping HMAC from resulting stream.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_response-hmac_func_v2.txt | {GTTLVGREP} 300.1f
>>>
011e9d919d262eb8f466b63b692ac49dc84630f78ccfc445a76ae500c0173557d0
>>>= 0

# Compare to the original binary file.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_response-hmac_func_v2.txt | diff test/resources/tlv/test2-extend_response-reqId_1-hmac_v2.tlv -
>>>
>>>= 0

###############################################################################
# Convert extend response file with multiple responses which includes HMAC
# calculation function (approach v2).

TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_response-multiple-hmac_func-mixed_ver.txt | {GTTLVGREP} 300.1f
>>>
010458a036efa3a44ca482cab675738873efef6b13479e0b555ce025d3a9972257
0110a5da5f9e2e6ed81c2620db1f2295fb5925d44d577d014a23490a742c114cb2
>>>= 0

###############################################################################
# Convert extend request file HMAC calculation function (approach v1).
# HMAC tag (1f) is not last.

TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_request-hmac_is_not_last-hmac_func_v1.txt | {GTTLVDUMP}
>>> /TLV.0300.*
.*TLV.01.*
.*TLV.01.*616e6f6e00.*
.*TLV.1f.*01df92e39026e0eb8100efb2e2abfe975035f03d88c37756fe28c7cbc9fd83cb6a.*
.*TLV.0301.*
.*TLV.01.*01.*
.*TLV.02.*54d9d6e7.*
.*TLV.03.*54d9d6e7.*/
>>>= 0

###############################################################################
# Convert extend request file HMAC calculation function (approach v2).
# HMAC tag (1f) is not last.

# When using approach v2 HMAC should be the last, otherwise an error is triggered.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_request-hmac_is_not_last-hmac_func_v2.txt
>>>
>>>2 /.*:4 - HMAC TLV is not last in PDU.
.*:4 - Failed to calculate HMAC./
>>>= 6

# Verify that it is working with the same PDU when HMAC last.
TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_request-hmac_is_last-hmac_func_v2.txt | {GTTLVDUMP}
>>> /TLV.0300.*
.*TLV.01.*
.*TLV.01.*616e6f6e00.*
.*TLV.0301.*
.*TLV.01.*01.*
.*TLV.02.*54d9d6e7.*
.*TLV.03.*54d9d6e7.*
.*TLV.1f.*01b76523f2852afc7893691ac3ee39a176fe3e364f9aa7f281a88f156a2cda435b.*/
>>>= 0

###############################################################################
# Convert extend request file HMAC calculation function (approach v2).
# HMAC tag (1f) indent level is 2.

TESTCASE: {GTTLVUNDUMP} test/resources/hmac/extend_request-hmac_is_last-indent_level_2-hmac_func_v2.txt
>>>
>>>2 /.*HMAC TLV is not first level PDU child.*
.*Failed to calculate HMAC./
>>>= 6

###############################################################################
# Test supported hash algorithms. Verify with KSI algorithm ID.

# Algorithm SHA1. KSI id=00. Digest lenght 160b.
TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|sha1|anon)" | {GTTLVUNDUMP} | {GTTLVDUMP} -y | grep -o "TLV.1f.. (L = 21) 00"
>>>/.*TLV.1f.*L = 21. 00.*/
>>>= 0

# Algorithm SHA2-256. KSI id=01. Digest lenght 256b.
TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|sha256|anon)" | {GTTLVUNDUMP} | {GTTLVDUMP} -y | grep -o "TLV.1f.. (L = 33) 01"
>>>/.*TLV.1f.*L = 33. 01.*/
>>>= 0

# Algorithm RIPEMD-160. KSI id=02. Digest lenght 160b.
TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|rmd160|anon)" | {GTTLVUNDUMP} | {GTTLVDUMP} -y | grep -o "TLV.1f.. (L = 21) 02"
>>>/.*TLV.1f.*L = 21. 02.*/
>>>= 0

# Algorithm SHA2-384. KSI id=04. Digest lenght 384b.
TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|sha384|anon)" | {GTTLVUNDUMP} | {GTTLVDUMP} -y | grep -o "TLV.1f.. (L = 49) 04"
>>>/.*TLV.1f.*L = 49. 04.*/
>>>= 0

# Algorithm SHA2-512. KSI id=05. Digest lenght 512b.
TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|sha512|anon)" | {GTTLVUNDUMP} | {GTTLVDUMP} -y | grep -o "TLV.1f.. (L = 65) 05"
>>>/.*TLV.1f.*L = 65. 05.*/
>>>= 0

###############################################################################
# Test unsupported hash algorithm (SHA2-224).

TESTCASE: printf "TLV[123]:\n  TLV[1f]:\$HMAC(v2|sha224|anon)" | {GTTLVUNDUMP}
>>>
>>>2 /.*Unable to get hash algorithm id./
>>>= 6

###############################################################################
# Wrong calculation version.

TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v3|sha256|anon)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

###############################################################################
# Unavailable pattern.

TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256|anon|800)") | {GTTLVUNDUMP}
>>>2 /.*Failed to calculate HMAC./
>>>= 6

###############################################################################
# Function script should start with '$' sign.

TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\HMAC(v1|sha256|anon|300.01,302)") | {GTTLVUNDUMP}
>>>2 /.*Unexpected character./
>>>= 6

###############################################################################
# Unsupported function script.

TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$DUMMY(param)") | {GTTLVUNDUMP}
>>>2 /.*Unknown function script./
>>>= 6

###############################################################################
# Test HMAC function script parameters for calculation v1.

# Only version is provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# Version and algorithm are provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# Version, algorithm and key are provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256|anon)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# All needed parameters are provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256|anon|300.01,302)") | {GTTLVUNDUMP} | {GTTLVGREP} 300.1f
>>>
010458a036efa3a44ca482cab675738873efef6b13479e0b555ce025d3a9972257
>>>= 0

# No extra parameters are allowed.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256|anon|300.01,302|Extra|Params)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# Test invalid pattern
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v1|sha256|anon|invalid.pattern)") | {GTTLVUNDUMP} | {GTTLVGREP} 300.1f
>>>2 /.*Invalid pattern 'invalid.pattern':.*
.*Invalid pattern.*
.*Failed to calculate HMAC./
>>>= 0


###############################################################################
# Test HMAC function script parameters for calculation v2.

# Only version is provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v2)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# Version and algorithm are provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v2|sha256)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# All needed parameters are provided.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v2|sha256|anon)") | {GTTLVUNDUMP} | {GTTLVGREP} 300.1f
>>>
011e9d919d262eb8f466b63b692ac49dc84630f78ccfc445a76ae500c0173557d0
>>>= 0

# No extra parameters are allowed.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v2|sha256|anon|300.01,302)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

# No extra parameters are allowed.
TESTCASE: (cat test/resources/hmac/extend_response-no_hmac.txt; echo "  TLV[1f]:\$HMAC(v2|sha256|anon|Extra|Params)") | {GTTLVUNDUMP}
>>>2 /.*Error in HMAC function call definition./
>>>= 6

###############################################################################



